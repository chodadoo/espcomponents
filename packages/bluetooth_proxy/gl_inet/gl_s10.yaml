esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: esp-idf

# Configuration fo V2.3 hardware revision
ethernet:
  type: IP101
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO0_IN
  phy_addr: 1
  power_pin: GPIO5
  
# Enable logging
logger:
  level: ERROR

api:

ota:
  platform: esphome
  password: !secret ota_password

text_sensor:
  - platform: ethernet_info
    ip_address:
      name: "IP"
      icon: mdi:ip-outline

time:
  - platform: sntp
    id: sntp_time
    timezone: Asia/Seoul
    servers: 
      - 0.pool.ntp.org
      - 1.pool.ntp.org
      - 2.pool.ntp.org

sensor:
  - platform: uptime
    name: "Uptime"
    type: timestamp
      
binary_sensor:
  - platform: status
    name: "Status"
    id: sensor_status
    on_press: 
      then:
        - if:
            condition:
              - switch.is_on: led_switch
            then: 
              - output.turn_on: status_led
    on_release: 
      then:
        - output.turn_off: status_led
  - platform: gpio
    pin:
      number: GPIO33
      inverted: true
    name: "Reset Button"
    id: binary_sensor_reset_button
    
switch:
  - platform: restart
    name: "Restart"
    
  - platform: safe_mode
    name: "Restart Safemode"
  
  - platform: template
    name: "LED"
    id: led_switch
    optimistic: True
    restore_mode: ALWAYS_ON
    on_turn_on: 
      then:
        - output.turn_on: power_led
        - if:
            condition:
              - binary_sensor.is_on: sensor_status
            then: 
              - output.turn_on: status_led
    on_turn_off: 
      then:
        - output.turn_off: power_led
        - output.turn_off: status_led

esp32_ble_tracker:
  scan_parameters:
    #interval: 1100ms
    #window: 1100ms
    active: true
#
# The LED is disabled for ESPHome 2023.6.0+ since we do not
# decode the advertising packets on device anymore, and adding
# the LED blink would force the device to decode the packets
# just to blink the LED.
#
# Bluetooth LED blinks when receiving Bluetooth advertising
  on_ble_advertise:
    then:
      - if: 
          condition:
            - switch.is_on: led_switch
          then: 
            - output.turn_on: bluetooth_led
            - delay: 0.5s
            - output.turn_off: bluetooth_led

bluetooth_proxy:
  active: true

# output settings for LED's marked Power and Bluetooth
# power LED use: see code line 15
# bluetooth LED use: see code line 60
output:
  - platform: gpio
    pin: GPIO14
    inverted: true
    id: power_led
  - platform: gpio
    pin: GPIO12
    inverted: true
    id: bluetooth_led
  - platform: gpio
    pin: GPIO32
    inverted: true
    id: status_led

# since these pins are broken out inside and labeled as I2C pins they're configured here
i2c:
  - id: i2c_bus
    sda: 15
    scl: 13
    scan: true